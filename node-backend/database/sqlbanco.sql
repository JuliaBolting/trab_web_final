-- MySQL Script generated by MySQL Workbench
-- Sat Feb 15 2025
-- Model: Sistema de Currículos    Version: 1.1
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema sistema_curriculos
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `sistema_curriculos`;
CREATE SCHEMA IF NOT EXISTS `sistema_curriculos` DEFAULT CHARACTER SET utf8;
USE `sistema_curriculos`;

-- -----------------------------------------------------
-- Table Usuario (unificada para Candidato e Empresa)
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`;
CREATE TABLE IF NOT EXISTS `Usuario` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL UNIQUE,
  `senha` VARCHAR(255) NOT NULL,
  `tipo` ENUM('candidato', 'empresa') NOT NULL, -- Tipo de usuário
  `dataCriacao` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `dataAtualizacao` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table Candidato
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidato`;
CREATE TABLE IF NOT EXISTS `Candidato` (
  `id` BIGINT UNSIGNED NOT NULL,
  `nome` VARCHAR(255) NOT NULL,
  `foto` VARCHAR(255) NULL,
  `foto_capa` VARCHAR(255) NULL,
  `localizacao` TEXT NULL,
  `setor` TEXT NULL,
  `resumo` TEXT NULL,
  `disponivel` BOOLEAN NOT NULL DEFAULT TRUE,
  `dataCriacao` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `dataAtualizacao` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`id`) REFERENCES `Usuario`(`id`) ON DELETE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table Empresa
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Empresa`;
CREATE TABLE IF NOT EXISTS `Empresa` (
  `id` BIGINT UNSIGNED NOT NULL,
  `nome` VARCHAR(255) NOT NULL,
  `dataCriacao` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `dataAtualizacao` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`id`) REFERENCES `Usuario`(`id`) ON DELETE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table Vaga
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Vaga`;
CREATE TABLE IF NOT EXISTS `Vaga` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `empresa_id` BIGINT UNSIGNED NOT NULL,
  `titulo` VARCHAR(255) NOT NULL,
  `descricao` TEXT NOT NULL,
  `salario` DECIMAL(10,2) NULL,
  `quantidade` INT UNSIGNED NOT NULL,
  `status` ENUM('aberta', 'fechada', 'reaberta') NOT NULL DEFAULT 'aberta',
  `dataCriacao` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `dataAtualizacao` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`empresa_id`) REFERENCES `Empresa`(`id`) ON DELETE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table Candidatura
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidatura`;
CREATE TABLE IF NOT EXISTS `Candidatura` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, -- Campo de ID
  `candidato_id` BIGINT UNSIGNED NOT NULL,
  `vaga_id` BIGINT UNSIGNED NOT NULL,
  `status` ENUM('pendente', 'entrevista', 'aprovado', 'reprovado') NOT NULL DEFAULT 'pendente',
  `dataCriacao` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `dataAtualizacao` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`), -- Definindo o campo `id` como chave primária
  FOREIGN KEY (`candidato_id`) REFERENCES `Candidato` (`id`) ON DELETE CASCADE,
  FOREIGN KEY (`vaga_id`) REFERENCES `Vaga` (`id`) ON DELETE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table Notificacao
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Notificacao`;
CREATE TABLE IF NOT EXISTS `Notificacao` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `usuario_id` BIGINT UNSIGNED NOT NULL,
  `mensagem` TEXT NOT NULL,
  `tipo` ENUM('chat', 'entrevista', 'outro') NOT NULL,
  `dataCriacao` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`usuario_id`) REFERENCES `Usuario`(`id`) ON DELETE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table Mensagem (Chat)
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Mensagem`;
CREATE TABLE IF NOT EXISTS `Mensagem` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `remetente_id` BIGINT UNSIGNED NOT NULL,
  `destinatario_id` BIGINT UNSIGNED NOT NULL,
  `conteudo` TEXT NOT NULL,
  `dataCriacao` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`remetente_id`) REFERENCES `Usuario`(`id`) ON DELETE CASCADE,
  FOREIGN KEY (`destinatario_id`) REFERENCES `Usuario`(`id`) ON DELETE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table Area
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Area`;
CREATE TABLE IF NOT EXISTS `Area` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table Candidato_Area
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidato_Area`;
CREATE TABLE IF NOT EXISTS `Candidato_Area` (
  `candidato_id` BIGINT UNSIGNED NOT NULL,
  `area_id` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`candidato_id`, `area_id`),
  FOREIGN KEY (`candidato_id`) REFERENCES `Candidato`(`id`),
  FOREIGN KEY (`area_id`) REFERENCES `Area`(`id`)
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table FormacaoAcademica
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FormacaoAcademica`;
CREATE TABLE IF NOT EXISTS `FormacaoAcademica` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `candidato_id` BIGINT UNSIGNED NOT NULL,
  `instituicao` VARCHAR(255) NOT NULL,
  `grau` ENUM('Técnico', 'Ensino Médio', 'Graduação', 'Pós-Graduação', 'Mestrado', 'Doutorado') NOT NULL,
  `curso` VARCHAR(255) NOT NULL,
  `ano_inicio` YEAR NOT NULL,
  `ano_conclusao` YEAR NULL,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`candidato_id`) REFERENCES `Candidato`(`id`) ON DELETE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Tabelas adicionais para certificações, experiências, habilidades, etc.
-- (Mantenha as tabelas para Certificacoes, Habilidade, Recomendacao, etc. semelhantes às anteriores)
-- As alterações seriam semelhantes, apenas alterando nomes e tipos conforme o modelo sugerido.
-- Exemplo para Certificações:
DROP TABLE IF EXISTS `Certificacao`;
CREATE TABLE IF NOT EXISTS `Certificacao` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `candidato_id` BIGINT UNSIGNED NOT NULL,
  `nome` VARCHAR(255) NOT NULL,
  `instituicao` VARCHAR(255) NOT NULL,
  `data_obtencao` DATE NULL,
  `validade` DATE NULL,
  `link_certificado` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`candidato_id`) REFERENCES `Candidato`(`id`) ON DELETE CASCADE
) ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `RecuperacaoSenha` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `usuario_id` BIGINT UNSIGNED NOT NULL,
  `token` VARCHAR(255) NOT NULL UNIQUE,
  `expiracao` DATETIME NOT NULL,
  `usado` BOOLEAN NOT NULL DEFAULT FALSE,
  `dataCriacao` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`usuario_id`) REFERENCES `Usuario`(`id`) ON DELETE CASCADE
) ENGINE = InnoDB;


-- -----------------------------------------------------
-- Índices para melhorar performance
-- -----------------------------------------------------
CREATE INDEX idx_email_usuario ON `Usuario`(`email`);
CREATE INDEX idx_status_candidatura ON `Candidatura`(`status`);
CREATE INDEX idx_status_vaga ON `Vaga`(`status`);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;